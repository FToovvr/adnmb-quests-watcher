CREATE TABLE post_base (
    id          integer,
    created_at  timestamptz NOT NULL,
    -- 照顾 thread_old_revision，不设为 NOT NULL
    user_id     text        NOT NULL,

    content                 text     NOT NULL,
    attachment_base         text,
    attachment_extension    text,
    name                    text,
    email                   text,
    title                   text,

    misc_fields             jsonb
);

CREATE TABLE thread (
    PRIMARY KEY (id)
) INHERITS (post_base);

CREATE INDEX idx__thread_user_id
    ON thread(user_id);
CREATE UNIQUE INDEX idx__thread__created_at__id
    ON thread(created_at, id);

CREATE TABLE thread_old_revision (

    -- 至少在这个时点之后就与这个版本的内容有不同了
    expired_before  timestamptz NOT NULL,

    -- 旧版只记载了正文、名称、邮箱地址和标题的变化，其他列都是假定没有变化而补上去的
    is_not_complete BOOLEAN DEFAULT FALSE,

    -- 从实用角度出发，不可能有两次修改在同一秒
    PRIMARY KEY (id, expired_before),
    FOREIGN KEY (id) REFERENCES thread (id)
) INHERITS (post_base);

CREATE INDEX idx__thread_old_revision__expired_before
    ON thread_old_revision (expired_before);

CREATE TABLE thread_extra (
    id          integer,
    
    -- 如果串消失了，则这里保留较早的时间；否则保留最新的时间
    updated_at  timestamptz,

    -- 如果串消失了，这里则是最后见到时的总回应数
    current_reply_count integer,

    is_disappeared      boolean DEFAULT FALSE,

    has_blue_text_before            timestamptz,
    completion_registry_post_ids    integer[],

    PRIMARY KEY (id),
    FOREIGN KEY (id) REFERENCES thread (id)
);

CREATE TABLE post (
    parent_thread_id        integer     NOT NULL,

    PRIMARY KEY (id),
    FOREIGN KEY (parent_thread_id) REFERENCES thread(id)
) INHERITS (post_base);

CREATE UNIQUE INDEX idx__post__parent_thread_id__id
    ON post(parent_thread_id, id);
CREATE UNIQUE INDEX idx__post__parent_thread_id__created_at__id
    ON post(parent_thread_id, created_at, id);
