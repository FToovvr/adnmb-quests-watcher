CREATE FUNCTION extract_blue_texts(in _content text)
    RETURNS xml[] AS $$
    DECLARE
        _wrapped_content text;
        _elems xml[];
        _elem xml;
        _attr text;
        _blue_texts xml[];
    BEGIN
        _wrapped_content := concat('<article>', _content, '</article>');
        IF NOT xml_is_well_formed_content(_wrapped_content) THEN
            RETURN NULL;
        END IF;

        SELECT xpath('//*[@color] | //*[@style]', _wrapped_content::xml)
        INTO _elems;

        _blue_texts := ARRAY[]::xml[];
        FOREACH _elem IN ARRAY _elems
        LOOP
            IF TRIM((SELECT (xpath('/*/@color', _elem))[1]::text)) = 'blue' THEN
                _blue_texts := array_append(_blue_texts, _elem);
            ELSIF (SELECT (xpath('/*/@style', _elem))[1]::text) ~* '(.*;)?\s*color\s*:\s*blue\s*(;.*)?' THEN
                _blue_texts := array_append(_blue_texts, _elem);
            END IF;
        END LOOP;

        IF cardinality(_blue_texts) = 0 THEN
            RETURN NULL;
        ELSE
            RETURN _blue_texts;
        END IF;
    END;
    $$ LANGUAGE plpgsql;

CREATE FUNCTION thread_got_new_blue_texts_between(
    in _thread_id    integer,
    in _lower_bound  timestamptz,
    in _upper_bound  timestamptz
) RETURNS boolean AS $$
    DECLARE
        _contents text[];
        _blue_text_before xml[];
        _blue_text_after xml[];
    BEGIN

        _contents := ARRAY(SELECT content FROM thread_revisions_betwwen(_thread_id, _lower_bound, _upper_bound));

        IF cardinality(_contents) < 2 THEN
            -- 只有一个代表收录之时就是当前内容，即使有蓝字也无法确认是否是新更新的蓝字
            RETURN FALSE;
        END IF;

        _blue_text_before := (SELECT extract_blue_texts(_contents[1]));
        _blue_text_after := (SELECT extract_blue_texts(_contents[array_upper(_contents, 1)]));
        
        IF _blue_text_after IS NULL THEN
            RETURN FALSE;
        ELSIF _blue_text_before IS NULL THEN
            RETURN TRUE;
        END IF;

        RETURN _blue_text_after::text[] != _blue_text_before::text[];

    END
    $$ LANGUAGE plpgsql;

-- XXX: 没有为这部分专门建索引。
-- 目前快一个月，1000 多个主串，查询也只要 5ms
CREATE FUNCTION get_thread_ids_in_completion_registry_thread_without_blue_texts()
RETURNS integer[] AS $$
    SELECT COALESCE(ARRAY_AGG(id), ARRAY[]::integer[]) FROM thread
    WHERE completion_registry_response_ids IS NOT NULL AND cardinality(completion_registry_response_ids) > 0
        AND NOT COALESCE(is_disappeared, FALSE)
        AND NOT COALESCE(has_blue_texts, FALSE);
    $$ LANGUAGE sql;